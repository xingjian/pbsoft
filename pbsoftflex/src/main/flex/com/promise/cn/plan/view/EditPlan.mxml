<?xml version="1.0" encoding="utf-8"?>
<views:PBTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" creationComplete="init()" close="closeWindow()"
			   xmlns:s="library://ns.adobe.com/flex/spark" title="修改任务计划" titleIcon="{Icons.editIcon}"
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="412" height="300" xmlns:views="com.promise.cn.views.*">
	<fx:Declarations>
		<s:RadioButtonGroup id="radiogroup_active"/>
		<s:RadioButtonGroup id="radiogroup_show"/>
		<fx:Array id="validators">
			<mx:StringValidator id="planNumValidator" trigger="{saveBtn}" source="{nameText}" property="text" required="true" requiredFieldError="任务计划不能为空！" />
		</fx:Array>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.promise.cn.common.DictConstant;
			import com.promise.cn.common.vo.DictContent;
			import com.promise.cn.framework.event.AppEvent;
			import com.promise.cn.framework.util.Global;
			import com.promise.cn.framework.util.Icons;
			import com.promise.cn.framework.util.PBConstant;
			import com.promise.cn.framework.util.PBUtil;
			import com.promise.cn.plan.vo.TaskRecord;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			import mx.validators.Validator;
			
			private var taskRecordService:RemoteObject;
			[Bindable]
			private var planTypeCBData:ArrayCollection;
			private var dictContentServiceSearch:RemoteObject;
			[Bindable]
			public var taskRecord:TaskRecord;
			
			//初始化方法
			public function init():void{
				dictContentServiceSearch = Global.getRemoteObject("dictService",dictContentServiceSearchHandle);
				taskRecordService = Global.getRemoteObject("taskRecordService",taskRecordServiceHandle);
				dictContentServiceSearch.listDictContent(DictConstant.PLANTYPE);
				radiogroup_active.selectedValue = taskRecord.activate;
				radiogroup_show.selectedValue = taskRecord.showTip;
			}
			
			//查询字典内容成功
			public function dictContentServiceSearchHandle(event:ResultEvent):void{
				var dictContentList:ArrayCollection = event.result as ArrayCollection;
				planTypeCBData = dictContentList;
				planTypeCB.selectedItem = taskRecord.taskType;
			}
			
			//保存成功
			private function taskRecordServiceHandle(evnet:ResultEvent):void{
				Alert.show("修改任务成功！","系统提示");
				var appEvent:AppEvent = new AppEvent(PBConstant.APP_PLANTITLEWINDOW,"success");
				this.dispatchEvent(appEvent);
				closeWindow();
			}
			
			//关闭窗口
			public function closeWindow(event:Event=null):void{
				PopUpManager.removePopUp(this);
			}
			
			//重置
			public function resetBtnClick():void{
				nameText.text = "";
				planTextArea.text = "";
				radiogroup_active.selectedValue = "0";
				radiogroup_show.selectedValue = "0";
				startDF.selectedDate = new Date();
				endDF.selectedDate = new Date();
				personNameText.text = "";
				//设置默认选择第一个
				if(null!=planTypeCBData&&planTypeCBData.length>0){
					planTypeCB.selectedIndex = 0;
				}
			}
			//提交
			public function submitBtnClick():void{
				var validatorErrorArray:Array = Validator.validateAll(validators);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if(isValidForm){
					taskRecord.name = nameText.text;
					taskRecord.content = planTextArea.text;
					var active:String = radiogroup_active.selectedValue.toString();
					var show:String = radiogroup_show.selectedValue.toString();
					taskRecord.activate = active;
					if(active=="1"){
						taskRecord.activateDate = PBUtil.DateToString("YYYY-MM-DD JJ:NN:SS",new Date());
					}else{
						taskRecord.activateDate = "";
					}
					taskRecord.showTip = show;
					taskRecord.startDate = startDF.text;
					taskRecord.endDate = endDF.text;
					taskRecord.pass = "0";
					taskRecord.currentValue="0";
					taskRecord.createUser = personNameText.text;
					taskRecord.taskType = planTypeCB.selectedItem as DictContent;
					taskRecordService.updateTaskRecord(taskRecord);
				}
			}
			
			
		]]>
	</fx:Script>
	<s:Label x="19" y="10" height="22" text="计划名称：" verticalAlign="middle"/>
	<s:TextInput id="nameText" x="87" y="10" width="313" text="{taskRecord.name}"/>
	<s:Label x="19" y="40" width="60" height="23" text="开始时间：" verticalAlign="middle"/>
	<mx:DateField id="startDF" x="87" y="40" selectedDate="{PBUtil.StringToDate(taskRecord.startDate)}" width="120" yearNavigationEnabled="true" formatString="MM-DD-YYYY" />
	<s:Label x="212" y="40" width="60" height="23" text="结束时间：" verticalAlign="middle"/>
	<mx:DateField id="endDF" x="280" y="40" selectedDate="{PBUtil.StringToDate(taskRecord.endDate)}" width="120" yearNavigationEnabled="true" formatString="MM-DD-YYYY" />
	<s:Label x="19" y="71" height="22" text="执行人员：" verticalAlign="middle"/>
	<s:TextInput id="personNameText" x="87" y="71" width="120" text="{taskRecord.createUser}"/>
	<s:Label x="212" y="71" height="22" text="计划类型：" verticalAlign="middle"/>
	<s:ComboBox id="planTypeCB" labelField="name" dataProvider="{planTypeCBData}" x="280" y="70" width="120"/>
	<s:Label x="212" y="105" height="23" text="是否提示：" verticalAlign="middle"/>
	<s:Label x="19" y="105" height="23" text="是否激活：" verticalAlign="middle"/>
	<s:Label x="19" y="134" text="任务描述："/>
	<s:TextArea id="planTextArea" text="{taskRecord.content}" x="19" y="152" width="381" height="74"/>
	<s:Button id="saveBtn" x="55" y="236" label="提交" click="submitBtnClick()"/>
	<s:Button x="168" y="236" label="重置" click="resetBtnClick()"/>
	<s:Button x="280" y="236" label="关闭" click="closeWindow()"/>
	<s:HGroup x="87" y="104" width="117" height="23" verticalAlign="middle" horizontalAlign="center">
		<s:RadioButton label="激活" value="1" groupName="radiogroup_active" />
		<s:RadioButton label="不激活" value="0" groupName="radiogroup_active" />
	</s:HGroup>
	<s:HGroup x="282" y="103" width="117" height="23" verticalAlign="middle" horizontalAlign="center">
		<s:RadioButton label="提示" value="1" groupName="radiogroup_show" />
		<s:RadioButton label="不提示" value="0" groupName="radiogroup_show" />
	</s:HGroup>
</views:PBTitleWindow>
